<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="775.2,602.4" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="62">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Security</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="106">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="499.2,426.4" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="436.8,314.4" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="732,4036.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Default="C:\Users\Mayuresh\Downloads\Marksheet Data__ (1).xlsx" Name="In_Path" />
            <Variable x:TypeArguments="x:String" Default="Data" Name="In_Sheet_Name" />
            <Variable x:TypeArguments="sd:DataTable" Name="Marksheet" />
            <Variable x:TypeArguments="scg:List(x:Int32)" Name="NewL" />
            <Variable x:TypeArguments="scg:List(x:Int32)" Name="SortL" />
            <Variable x:TypeArguments="x:Int32" Name="Counter">
              <Variable.Default>
                <Literal x:TypeArguments="x:Int32" Value="1" />
              </Variable.Default>
            </Variable>
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="669.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Reading Input Data&quot;]" />
          <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[Marksheet]" DisplayName="Reading Workbook Input Data" sap:VirtualizedContainerService.HintSize="669.6,88" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="[In_Sheet_Name]" WorkbookPath="[In_Path]" />
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="669.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Calculating ATKT count&quot;]" />
          <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim tempArray(6) As Boolean&#xA;For Each row As DataRow In Marksheet.Rows&#xA;&#x9;tempArray = {CInt(row(&quot;English&quot;))&lt;40,CInt(row(&quot;Urdu&quot;))&lt;40,CInt(row(&quot;Physics&quot;))&lt;40,CInt(row(&quot;Chemistry&quot;))&lt;40,CInt(row(&quot;Math&quot;))&lt;40,CInt(row(&quot;Biology&quot;))&lt;40}&#xA;&#x9;row(&quot;At_Kt&quot;) = tempArray.Count(Function(A) A = True )&#xA;&#x9;Next" DisplayName="Invoke Code for ATKT" sap:VirtualizedContainerService.HintSize="669.6,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
            <ui:InvokeCode.Arguments>
              <InOutArgument x:TypeArguments="sd:DataTable" x:Key="Marksheet">[Marksheet]</InOutArgument>
            </ui:InvokeCode.Arguments>
          </ui:InvokeCode>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="669.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Adding Temp Column&quot;]" />
          <ui:AddDataColumn x:TypeArguments="x:Int32" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="Sub_Total" DataTable="[Marksheet]" DisplayName="Add Temp Data Column" sap:VirtualizedContainerService.HintSize="669.6,188" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_2" />
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="669.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Calculating Total Marks &quot;]" />
          <ui:InvokeCode ContinueOnError="{x:Null}" Code="For Each row As DataRow In Marksheet.Rows&#xA;If CInt(row(&quot;At_Kt&quot;)) = 0 Then&#xA;&#x9;row(&quot;Sub_Total&quot;)=CInt(row(&quot;English&quot;)) + CInt(row(&quot;Urdu&quot;)) +CInt(row(&quot;Physics&quot;)) +CInt(row(&quot;Chemistry&quot;)) +CInt(row(&quot;Math&quot;)) +CInt(row(&quot;Biology&quot;))&#xA;End If&#xA;Next" DisplayName="Invoke Code Total Marks" sap:VirtualizedContainerService.HintSize="669.6,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
            <ui:InvokeCode.Arguments>
              <InOutArgument x:TypeArguments="sd:DataTable" x:Key="Marksheet">[Marksheet]</InOutArgument>
            </ui:InvokeCode.Arguments>
          </ui:InvokeCode>
          <Assign sap2010:Annotation.AnnotationText="Extracting Total Marklist out of Columns&#xA;" DisplayName="Extraction of List" sap:VirtualizedContainerService.HintSize="669.6,125.6" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="scg:List(x:Int32)">[NewL]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="scg:List(x:Int32)" xml:space="preserve">[Marksheet.AsEnumerable.Where(Function(row)  Cint(row("At_Kt"))=0).Select(Function(X) Cint(X("Sub_Total"))).ToList]</InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
          <Assign sap2010:Annotation.AnnotationText="Ordering List As Descending For finding Rank" DisplayName="Arranging List" sap:VirtualizedContainerService.HintSize="669.6,112.8" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="scg:List(x:Int32)">[SortL]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="scg:List(x:Int32)">[NewL.OrderByDescending(Function(X) X).ToList()]</InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="669.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Calculating Rank&quot;]" />
          <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Adding Values To Rank Column code&#xA;" Code="Dim Com As List(Of Integer) = SortL&#xA;For Each row As DataRow In Marksheet.Rows&#xA;    If CInt(row(&quot;At_Kt&quot;)) = 0 Then&#xA;        row(&quot;Rank&quot;) = Com.IndexOf(CInt(row(&quot;Sub_Total&quot;)))+1&#xA;    Else &#xA;        row(&quot;Rank&quot;)=&quot;NA&quot;&#xA;    End If&#xA;Next&#xA;" DisplayName="Invoke Code For Rank" sap:VirtualizedContainerService.HintSize="669.6,208.8" sap2010:WorkflowViewState.IdRef="InvokeCode_3">
            <ui:InvokeCode.Arguments>
              <InOutArgument x:TypeArguments="sd:DataTable" x:Key="Marksheet">[Marksheet]</InOutArgument>
              <InArgument x:TypeArguments="scg:List(x:Int32)" x:Key="SortL">[SortL]</InArgument>
            </ui:InvokeCode.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeCode>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="669.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Remove Temp Column&quot;]" />
          <ui:RemoveDataColumn Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="Sub_Total" DataTable="[Marksheet]" DisplayName="Remove Temp Data Column" sap:VirtualizedContainerService.HintSize="669.6,188" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_1" />
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="669.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Writing Output Data to Workbook&quot;]" />
          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[Marksheet]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="669.6,1434.4" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="636,1317.6" sap2010:WorkflowViewState.IdRef="Sequence_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="573.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_3">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[Counter]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[Counter+1]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <If Condition="[CurrentRow(&quot;Rank&quot;).ToString=&quot;NA&quot;]" sap:VirtualizedContainerService.HintSize="573.6,1084" sap2010:WorkflowViewState.IdRef="If_2">
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="496,677.6" sap2010:WorkflowViewState.IdRef="Sequence_3">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:WriteCell Cell="[&quot;M&quot;+Counter.ToString]" DisplayName="Write Cell Workbook" sap:VirtualizedContainerService.HintSize="433.6,116" sap2010:WorkflowViewState.IdRef="WriteCell_1" SheetName="[In_Sheet_Name]" Text="[CurrentRow(&quot;Rank&quot;).ToString]" WorkbookPath="[In_Path]" />
                        <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="433.6,409.6" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="[In_Path]">
                          <ui:ExcelApplicationScope.Body>
                            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,300" sap2010:WorkflowViewState.IdRef="Sequence_6">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:ExcelSetRangeColor Color="[Color.Red]" DisplayName="Set Range Color" sap:VirtualizedContainerService.HintSize="337.6,188" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_1" Range="[&quot;M&quot;+Counter.ToString]" SheetName="[In_Sheet_Name]" />
                              </Sequence>
                            </ActivityAction>
                          </ui:ExcelApplicationScope.Body>
                        </ui:ExcelApplicationScope>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="400,228" sap2010:WorkflowViewState.IdRef="Sequence_4">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:WriteCell Cell="[&quot;M&quot;+Counter.ToString]" DisplayName="Write Cell Workbook" sap:VirtualizedContainerService.HintSize="337.6,116" sap2010:WorkflowViewState.IdRef="WriteCell_2" SheetName="[In_Sheet_Name]" Text="[CurrentRow(&quot;Rank&quot;).ToString]" WorkbookPath="[In_Path]" />
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
          </ui:ForEachRow>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>